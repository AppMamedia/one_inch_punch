#!/usr/bin/env ruby
#
#  Created on 2008-8-25.
#  Copyright (c) 2008. All rights reserved.

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'punch'
require 'optparse'
require 'time'

OPTIONS = {}
MANDATORY_OPTIONS = %w[]

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
Usage: #{File.basename($0)} [command] <project>

Options are:
BANNER
  opts.separator ''
  opts.on('-v', '--version',
          "Show the #{File.basename($0)} version number and exit") { require 'punch/version'; puts "#{File.basename($0)} #{Punch::VERSION::STRING}"; exit  }
  opts.on('--after [TIME]', String,
          "Restrict command to only after the given time") { |time|  OPTIONS[:after] = Time.parse(time) }
  opts.on('--before [TIME]', String,
          "Restrict command to only before the given time") { |time|  OPTIONS[:before] = Time.parse(time) }
  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit
  end
end

command = ARGV[0]

unless command
  puts "Usage: #{File.basename($0)} [command] <project>"
  exit
end

project = ARGV[1]

Punch.load

case command
when 'status'
  puts Punch.status(project).inspect
when 'total'
  puts Punch.total(project, OPTIONS.merge(:format => true)).inspect
when 'in'
  if project
    if Punch.in(project)
      Punch.write
    else
      puts "Already punched in to '#{project}'"
    end
  else
    puts "Project required"
  end
when 'delete'
  if project
    Punch.write if result = Punch.delete(project)
    puts result.inspect
  else
    puts "Project required"
  end
when 'out'
  if Punch.out(project)
    Punch.write
  else
    message = 'Already punched out of '
    message += project ? "'#{project}'" : 'all projects'
    puts message
  end
when 'log'
  if project
    if message = ARGV[2]
      if Punch.log(project, message)
        Punch.write
      else
        puts "Not punched in to '#{project}'"
      end
    else
      puts "Message required"
    end
  else
    puts "Project required"
  end
end
